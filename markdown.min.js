/**
 * Copyright (c) 2025
 * @Version: 1.0.0
 * @Author: https://salarizadi.ir
 * @Repsitory: https://github.com/salarizadi/markdown.js
 * @Description: A powerful Markdown parser with RTL support and smart typography
 * @License: MIT
 */
!function(e,r){"function"==typeof define&&define.amd?define([],r):"object"==typeof exports&&"object"==typeof module?(module.exports=r(),Object.defineProperty(module.exports,"__esModule",{value:!0}),module.exports.default=r()):"object"==typeof exports?exports.Markdown=r():e.Markdown=r()}("undefined"!=typeof self?self:this,(function(){class e{constructor(){this.options={codeHighlight:!0,rtlSupport:!0,smartTypography:!0},this.codeBlocks=[],this.codeBlocksPlaceholder="___CODE_BLOCK_PLACEHOLDER___"}normalizeSpacing(e){return e.trim().replace(/\n{4,}/g,"\n\n\n").replace(/[ \t]+$/gm,"").replace(/\n{3,}(?:-{3,}|_{3,}|\*{3,})\n{3,}/g,"\n\n---\n\n").replace(/(\n- .*)\n{3,}(?=- )/g,"$1\n\n").replace(/(\n\d+\. .*)\n{3,}(?=\d+\. )/g,"$1\n\n")}parseColorCodes(e){return e.replace(/#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})\b/g,(e=>`${e}<span class="color-preview" data-hex="${e}" style="background-color:${e};"></span>`))}parse(e){let r=this.normalizeSpacing(e);return r=this.preserveCodeBlocks(r),r=this.parseHeadings(r),r=this.parseLists(r),r=this.parseLinks(r),r=this.parseImages(r),r=this.parseColorCodes(r),r=this.parseInlineFormats(r),r=this.parseBlockquotes(r),r=this.parseHorizontalRules(r),r=this.parseTables(r),r=this.parseParagraphs(r),r=this.restoreCodeBlocks(r),r.replace(/<p[^>]*>\s*<\/p>/g,"").replace(/>\n{3,}</g,">\n\n<").replace(/>\s{2,}/g,"> ").replace(/\s{2,}</g," <")}preserveCodeBlocks(e){return e.replace(/```(\w*)\n([\s\S]*?)```/g,((e,r,t)=>(this.codeBlocks.push({language:r,code:t.trim()}),this.codeBlocksPlaceholder)))}restoreCodeBlocks(e){let r=e;return this.codeBlocks.forEach(((e,t)=>{const a=`<pre dir="ltr"><code class="${e.language?`language-${e.language}`:""}" data-language="${e.language}">${this.escapeHtml(e.code)}</code></pre>`;r=r.replace(this.codeBlocksPlaceholder,a)})),this.codeBlocks=[],r}parseCodeBlocks(e){return e.replace(/```(\w*)\n([\s\S]*?)```/g,((e,r,t)=>{t=t.trim();return`<pre dir="ltr"><code class="${r?`language-${r}`:""}" data-language="${r}">${this.escapeHtml(t)}</code></pre>`}))}parseHeadings(e){return e.replace(/^(#{1,6})\s(.+)$/gm,((e,r,t)=>{const a=r.length;return`<h${a}>${t.trim()}</h${a}>`}))}parseLists(e){return e=(e=(e=(e=e.replace(/^[\*\-]\s(.+)$/gm,"<li>$1</li>")).replace(/(<li>.*<\/li>)/s,'<ul dir="auto">$1</ul>')).replace(/^\d+\.\s(.+)$/gm,"<li>$1</li>")).replace(/(<li>.*<\/li>)/s,'<ol dir="auto">$1</ol>')}parseLinks(e){return e.replace(/\[([^\]]+)\]\(([^\)]+)\)/g,'<a href="$2">$1</a>')}parseImages(e){return e.replace(/!\[([^\]]*)\]\(([^\)]+)\)/g,'<img src="$2" alt="$1">')}parseInlineFormats(e){return e=(e=(e=(e=e.replace(/\*\*([^*]+)\*\*/g,"<strong>$1</strong>")).replace(/\*([^*]+)\*/g,"<em>$1</em>")).replace(/~~([^~]+)~~/g,"<del>$1</del>")).replace(/`([^`]+)`/g,"<code>$1</code>")}parseBlockquotes(e){return e.replace(/^>\s(.+)$/gm,'<blockquote dir="auto">$1</blockquote>')}parseHorizontalRules(e){return e.replace(/^(?:[\*\-_]\s*){3,}$/gm,"<hr>")}parseTables(e){return e.replace(/\|(.+)\|\n\|(?:[-:]+\|)+\n((?:\|.+\|\n?)*)/g,((e,r,t)=>{const a=r.split("|").map((e=>e.trim())).filter(Boolean),s=t.trim().split("\n").map((e=>`<tr>${e.split("|").map((e=>e.trim())).filter(Boolean).map((e=>`<td>${e}</td>`)).join("")}</tr>`));return`\n                <table dir="auto">\n                    <thead>\n                        <tr>${a.map((e=>`<th>${e}</th>`)).join("")}</tr>\n                    </thead>\n                    <tbody>\n                        ${s.join("\n")}\n                    </tbody>\n                </table>\n            `}))}parseParagraphs(e){return e.split("\n\n").map((e=>e.trim())).filter((e=>e.length>0)).map((e=>/^<[^>]+>/.test(e)?e:`<p dir="auto">${e}</p>`)).join("\n\n")}escapeHtml(e){const r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,(e=>r[e]))}}return String.prototype.markdown=function(){return(new e).parse(this)},e}));
